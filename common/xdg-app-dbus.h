/*
 * Generated by gdbus-codegen 2.46.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef ____COMMON_XDG_APP_DBUS_H__
#define ____COMMON_XDG_APP_DBUS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.XdgApp.SessionHelper */

#define XDG_APP_TYPE_SESSION_HELPER (xdg_app_session_helper_get_type ())
#define XDG_APP_SESSION_HELPER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XDG_APP_TYPE_SESSION_HELPER, XdgAppSessionHelper))
#define XDG_APP_IS_SESSION_HELPER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XDG_APP_TYPE_SESSION_HELPER))
#define XDG_APP_SESSION_HELPER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), XDG_APP_TYPE_SESSION_HELPER, XdgAppSessionHelperIface))

struct _XdgAppSessionHelper;
typedef struct _XdgAppSessionHelper XdgAppSessionHelper;
typedef struct _XdgAppSessionHelperIface XdgAppSessionHelperIface;

struct _XdgAppSessionHelperIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_request_monitor) (
    XdgAppSessionHelper *object,
    GDBusMethodInvocation *invocation);

};

GType xdg_app_session_helper_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *xdg_app_session_helper_interface_info (void);
guint xdg_app_session_helper_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void xdg_app_session_helper_complete_request_monitor (
    XdgAppSessionHelper *object,
    GDBusMethodInvocation *invocation,
    const gchar *path);



/* D-Bus method calls: */
void xdg_app_session_helper_call_request_monitor (
    XdgAppSessionHelper *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xdg_app_session_helper_call_request_monitor_finish (
    XdgAppSessionHelper *proxy,
    gchar **out_path,
    GAsyncResult *res,
    GError **error);

gboolean xdg_app_session_helper_call_request_monitor_sync (
    XdgAppSessionHelper *proxy,
    gchar **out_path,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define XDG_APP_TYPE_SESSION_HELPER_PROXY (xdg_app_session_helper_proxy_get_type ())
#define XDG_APP_SESSION_HELPER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XDG_APP_TYPE_SESSION_HELPER_PROXY, XdgAppSessionHelperProxy))
#define XDG_APP_SESSION_HELPER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), XDG_APP_TYPE_SESSION_HELPER_PROXY, XdgAppSessionHelperProxyClass))
#define XDG_APP_SESSION_HELPER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), XDG_APP_TYPE_SESSION_HELPER_PROXY, XdgAppSessionHelperProxyClass))
#define XDG_APP_IS_SESSION_HELPER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XDG_APP_TYPE_SESSION_HELPER_PROXY))
#define XDG_APP_IS_SESSION_HELPER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), XDG_APP_TYPE_SESSION_HELPER_PROXY))

typedef struct _XdgAppSessionHelperProxy XdgAppSessionHelperProxy;
typedef struct _XdgAppSessionHelperProxyClass XdgAppSessionHelperProxyClass;
typedef struct _XdgAppSessionHelperProxyPrivate XdgAppSessionHelperProxyPrivate;

struct _XdgAppSessionHelperProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  XdgAppSessionHelperProxyPrivate *priv;
};

struct _XdgAppSessionHelperProxyClass
{
  GDBusProxyClass parent_class;
};

GType xdg_app_session_helper_proxy_get_type (void) G_GNUC_CONST;

void xdg_app_session_helper_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
XdgAppSessionHelper *xdg_app_session_helper_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
XdgAppSessionHelper *xdg_app_session_helper_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void xdg_app_session_helper_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
XdgAppSessionHelper *xdg_app_session_helper_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
XdgAppSessionHelper *xdg_app_session_helper_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define XDG_APP_TYPE_SESSION_HELPER_SKELETON (xdg_app_session_helper_skeleton_get_type ())
#define XDG_APP_SESSION_HELPER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XDG_APP_TYPE_SESSION_HELPER_SKELETON, XdgAppSessionHelperSkeleton))
#define XDG_APP_SESSION_HELPER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), XDG_APP_TYPE_SESSION_HELPER_SKELETON, XdgAppSessionHelperSkeletonClass))
#define XDG_APP_SESSION_HELPER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), XDG_APP_TYPE_SESSION_HELPER_SKELETON, XdgAppSessionHelperSkeletonClass))
#define XDG_APP_IS_SESSION_HELPER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XDG_APP_TYPE_SESSION_HELPER_SKELETON))
#define XDG_APP_IS_SESSION_HELPER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), XDG_APP_TYPE_SESSION_HELPER_SKELETON))

typedef struct _XdgAppSessionHelperSkeleton XdgAppSessionHelperSkeleton;
typedef struct _XdgAppSessionHelperSkeletonClass XdgAppSessionHelperSkeletonClass;
typedef struct _XdgAppSessionHelperSkeletonPrivate XdgAppSessionHelperSkeletonPrivate;

struct _XdgAppSessionHelperSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  XdgAppSessionHelperSkeletonPrivate *priv;
};

struct _XdgAppSessionHelperSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType xdg_app_session_helper_skeleton_get_type (void) G_GNUC_CONST;

XdgAppSessionHelper *xdg_app_session_helper_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.XdgApp.PermissionStore */

#define XDG_APP_TYPE_PERMISSION_STORE (xdg_app_permission_store_get_type ())
#define XDG_APP_PERMISSION_STORE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XDG_APP_TYPE_PERMISSION_STORE, XdgAppPermissionStore))
#define XDG_APP_IS_PERMISSION_STORE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XDG_APP_TYPE_PERMISSION_STORE))
#define XDG_APP_PERMISSION_STORE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), XDG_APP_TYPE_PERMISSION_STORE, XdgAppPermissionStoreIface))

struct _XdgAppPermissionStore;
typedef struct _XdgAppPermissionStore XdgAppPermissionStore;
typedef struct _XdgAppPermissionStoreIface XdgAppPermissionStoreIface;

struct _XdgAppPermissionStoreIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_delete) (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_table,
    const gchar *arg_id);

  gboolean (*handle_list) (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_table);

  gboolean (*handle_lookup) (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_table,
    const gchar *arg_id);

  gboolean (*handle_set) (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    GVariant *arg_app_permissions,
    GVariant *arg_data);

  gboolean (*handle_set_permission) (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    const gchar *arg_app,
    const gchar *const *arg_permissions);

  gboolean (*handle_set_value) (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    GVariant *arg_data);

};

GType xdg_app_permission_store_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *xdg_app_permission_store_interface_info (void);
guint xdg_app_permission_store_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void xdg_app_permission_store_complete_lookup (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation,
    GVariant *permissions,
    GVariant *data);

void xdg_app_permission_store_complete_set (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation);

void xdg_app_permission_store_complete_delete (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation);

void xdg_app_permission_store_complete_set_value (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation);

void xdg_app_permission_store_complete_set_permission (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation);

void xdg_app_permission_store_complete_list (
    XdgAppPermissionStore *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *ids);



/* D-Bus method calls: */
void xdg_app_permission_store_call_lookup (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    const gchar *arg_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xdg_app_permission_store_call_lookup_finish (
    XdgAppPermissionStore *proxy,
    GVariant **out_permissions,
    GVariant **out_data,
    GAsyncResult *res,
    GError **error);

gboolean xdg_app_permission_store_call_lookup_sync (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    const gchar *arg_id,
    GVariant **out_permissions,
    GVariant **out_data,
    GCancellable *cancellable,
    GError **error);

void xdg_app_permission_store_call_set (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    GVariant *arg_app_permissions,
    GVariant *arg_data,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xdg_app_permission_store_call_set_finish (
    XdgAppPermissionStore *proxy,
    GAsyncResult *res,
    GError **error);

gboolean xdg_app_permission_store_call_set_sync (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    GVariant *arg_app_permissions,
    GVariant *arg_data,
    GCancellable *cancellable,
    GError **error);

void xdg_app_permission_store_call_delete (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    const gchar *arg_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xdg_app_permission_store_call_delete_finish (
    XdgAppPermissionStore *proxy,
    GAsyncResult *res,
    GError **error);

gboolean xdg_app_permission_store_call_delete_sync (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    const gchar *arg_id,
    GCancellable *cancellable,
    GError **error);

void xdg_app_permission_store_call_set_value (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    GVariant *arg_data,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xdg_app_permission_store_call_set_value_finish (
    XdgAppPermissionStore *proxy,
    GAsyncResult *res,
    GError **error);

gboolean xdg_app_permission_store_call_set_value_sync (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    GVariant *arg_data,
    GCancellable *cancellable,
    GError **error);

void xdg_app_permission_store_call_set_permission (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    const gchar *arg_app,
    const gchar *const *arg_permissions,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xdg_app_permission_store_call_set_permission_finish (
    XdgAppPermissionStore *proxy,
    GAsyncResult *res,
    GError **error);

gboolean xdg_app_permission_store_call_set_permission_sync (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    gboolean arg_create,
    const gchar *arg_id,
    const gchar *arg_app,
    const gchar *const *arg_permissions,
    GCancellable *cancellable,
    GError **error);

void xdg_app_permission_store_call_list (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean xdg_app_permission_store_call_list_finish (
    XdgAppPermissionStore *proxy,
    gchar ***out_ids,
    GAsyncResult *res,
    GError **error);

gboolean xdg_app_permission_store_call_list_sync (
    XdgAppPermissionStore *proxy,
    const gchar *arg_table,
    gchar ***out_ids,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define XDG_APP_TYPE_PERMISSION_STORE_PROXY (xdg_app_permission_store_proxy_get_type ())
#define XDG_APP_PERMISSION_STORE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XDG_APP_TYPE_PERMISSION_STORE_PROXY, XdgAppPermissionStoreProxy))
#define XDG_APP_PERMISSION_STORE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), XDG_APP_TYPE_PERMISSION_STORE_PROXY, XdgAppPermissionStoreProxyClass))
#define XDG_APP_PERMISSION_STORE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), XDG_APP_TYPE_PERMISSION_STORE_PROXY, XdgAppPermissionStoreProxyClass))
#define XDG_APP_IS_PERMISSION_STORE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XDG_APP_TYPE_PERMISSION_STORE_PROXY))
#define XDG_APP_IS_PERMISSION_STORE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), XDG_APP_TYPE_PERMISSION_STORE_PROXY))

typedef struct _XdgAppPermissionStoreProxy XdgAppPermissionStoreProxy;
typedef struct _XdgAppPermissionStoreProxyClass XdgAppPermissionStoreProxyClass;
typedef struct _XdgAppPermissionStoreProxyPrivate XdgAppPermissionStoreProxyPrivate;

struct _XdgAppPermissionStoreProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  XdgAppPermissionStoreProxyPrivate *priv;
};

struct _XdgAppPermissionStoreProxyClass
{
  GDBusProxyClass parent_class;
};

GType xdg_app_permission_store_proxy_get_type (void) G_GNUC_CONST;

void xdg_app_permission_store_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
XdgAppPermissionStore *xdg_app_permission_store_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
XdgAppPermissionStore *xdg_app_permission_store_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void xdg_app_permission_store_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
XdgAppPermissionStore *xdg_app_permission_store_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
XdgAppPermissionStore *xdg_app_permission_store_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define XDG_APP_TYPE_PERMISSION_STORE_SKELETON (xdg_app_permission_store_skeleton_get_type ())
#define XDG_APP_PERMISSION_STORE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), XDG_APP_TYPE_PERMISSION_STORE_SKELETON, XdgAppPermissionStoreSkeleton))
#define XDG_APP_PERMISSION_STORE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), XDG_APP_TYPE_PERMISSION_STORE_SKELETON, XdgAppPermissionStoreSkeletonClass))
#define XDG_APP_PERMISSION_STORE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), XDG_APP_TYPE_PERMISSION_STORE_SKELETON, XdgAppPermissionStoreSkeletonClass))
#define XDG_APP_IS_PERMISSION_STORE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), XDG_APP_TYPE_PERMISSION_STORE_SKELETON))
#define XDG_APP_IS_PERMISSION_STORE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), XDG_APP_TYPE_PERMISSION_STORE_SKELETON))

typedef struct _XdgAppPermissionStoreSkeleton XdgAppPermissionStoreSkeleton;
typedef struct _XdgAppPermissionStoreSkeletonClass XdgAppPermissionStoreSkeletonClass;
typedef struct _XdgAppPermissionStoreSkeletonPrivate XdgAppPermissionStoreSkeletonPrivate;

struct _XdgAppPermissionStoreSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  XdgAppPermissionStoreSkeletonPrivate *priv;
};

struct _XdgAppPermissionStoreSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType xdg_app_permission_store_skeleton_get_type (void) G_GNUC_CONST;

XdgAppPermissionStore *xdg_app_permission_store_skeleton_new (void);


G_END_DECLS

#endif /* ____COMMON_XDG_APP_DBUS_H__ */
